{
  "_args": [
    [
      {
        "raw": "yargs-unparser@1.6.0",
        "scope": null,
        "escapedName": "yargs-unparser",
        "name": "yargs-unparser",
        "rawSpec": "1.6.0",
        "spec": "1.6.0",
        "type": "version"
      },
      "/home/blockchain/Desktop/enerblock_saw/client/public/node_modules/mocha"
    ]
  ],
  "_from": "yargs-unparser@1.6.0",
  "_hasShrinkwrap": false,
  "_id": "yargs-unparser@1.6.0",
  "_inCache": true,
  "_location": "/yargs-unparser",
  "_nodeVersion": "12.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/yargs-unparser_1.6.0_1564464402994_0.8273298472266375"
  },
  "_npmUser": {
    "name": "bcoe",
    "email": "bencoe@gmail.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "yargs-unparser@1.6.0",
    "scope": null,
    "escapedName": "yargs-unparser",
    "name": "yargs-unparser",
    "rawSpec": "1.6.0",
    "spec": "1.6.0",
    "type": "version"
  },
  "_requiredBy": [
    "/mocha"
  ],
  "_resolved": "https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-1.6.0.tgz",
  "_shasum": "ef25c2c769ff6bd09e4b0f9d7c605fb27846ea9f",
  "_shrinkwrap": null,
  "_spec": "yargs-unparser@1.6.0",
  "_where": "/home/blockchain/Desktop/enerblock_saw/client/public/node_modules/mocha",
  "author": {
    "name": "AndrÃ© Cruz",
    "email": "andre@moxy.studio"
  },
  "bugs": {
    "url": "https://github.com/yargs/yargs-unparser/issues"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "dependencies": {
    "flat": "^4.1.0",
    "lodash": "^4.17.15",
    "yargs": "^13.3.0"
  },
  "description": "Converts back a yargs argv object to its original array form",
  "devDependencies": {
    "@commitlint/cli": "^8.1.0",
    "@commitlint/config-conventional": "^8.1.0",
    "eslint": "^6.1.0",
    "eslint-config-moxy": "^7.1.0",
    "husky": "^3.0.1",
    "jest": "^24.8.0",
    "lint-staged": "^9.2.1",
    "minimist": "^1.2.0",
    "standard-version": "^7.0.0",
    "yargs-parser": "^13.1.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-W9tKgmSn0DpSatfri0nx52Joq5hVXgeLiqR/5G0sZNDoLZFOr/xjBUDcShCOGNsBnEMNo1KAMBkTej1Hm62HTw==",
    "shasum": "ef25c2c769ff6bd09e4b0f9d7c605fb27846ea9f",
    "tarball": "https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-1.6.0.tgz",
    "fileCount": 5,
    "unpackedSize": 12149,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdP9UUCRA9TVsSAnZWagAA5I0P/ipZyYL8CMODhj9czoJu\nUMY6a7ETAR/DX5W/CH7esucmLRsaYB7y+Cva0ytUFGVtUUcn4yFr7QZRJlFx\n01LfnhWvq8+5+fp48sxLgfE8BOAqIHBZQqTQLdeXCQBUGSHna+uYOPtzTcgi\n6X9tPS9iTlMBAAb/IKnnk1jyVx1XdzEXO2adhXm88GCfKb/YQmgWK4jL8SSb\nUosqPvgnZGM2v33AHLgbt7qKTnvqLNBwq1ODpdunUlaiQX0d3Jin1sxBy5gb\nXBfFg7/glvo4P8Reuc8gr1vYvRw36YPIxwfonVS3SOG4ejSavsbs1htgylAy\nnaHniaZ/+SiXvHEj9N8tM0/EryeQqxhtVNq5elZRTzfxCpO8Dovim5s9l8WL\n5khCVu7KZOVl/ZM+rxLXyd4Jgzc66e1q0287e5tisY9u4XSU8VDvC0NmGSC+\n+ijRiyuK4TWntDumK+IzYmo5TOyHcjsozPb1A8MW23HEg7KMejqi0OX+JMb0\n4eV2myS1YyNVBT6vwgmYAkgxjTxDTf9UFzo1Ra3GOJQ8F1IJzGp2/ojdzKTf\nERYeHQMh3PtA1PEVsaMxlFKhrD7QLnHZacNwe6KZ6g+tgb6EXZYQ/jHRFo5R\n3+qEooE1wQaWSCgCqxMO8E1qMcYFXNhbTEFMCQg4J/3VHrvbe5tnhFiGQP3K\nqkpm\r\n=tiyK\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">=6"
  },
  "gitHead": "707b456935e881fe63a670d895ac15950cf1bbb5",
  "homepage": "https://github.com/yargs/yargs-unparser",
  "keywords": [
    "yargs",
    "unparse",
    "expand",
    "inverse",
    "argv"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "git add"
    ]
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "acostalima",
      "email": "andreclima.pt@gmail.com"
    },
    {
      "name": "afonsovreis",
      "email": "a.reis_05@hotmail.com"
    },
    {
      "name": "bcoe",
      "email": "bencoe@gmail.com"
    },
    {
      "name": "dominguesgm",
      "email": "gmdz95@gmail.com"
    },
    {
      "name": "filipediasf",
      "email": "filipediasferreira@me.com"
    },
    {
      "name": "fsdiogo",
      "email": "fsdiogo@gmail.com"
    },
    {
      "name": "hugomrdias",
      "email": "mail@hugodias.me"
    },
    {
      "name": "ivolimasilva",
      "email": "ivolimasilva@outlook.com"
    },
    {
      "name": "joaomota",
      "email": "joaomssmota@gmail.com"
    },
    {
      "name": "marcooliveira",
      "email": "marcooliveira@me.com"
    },
    {
      "name": "moxyhq",
      "email": "hello@moxy.studio"
    },
    {
      "name": "nlfonseca",
      "email": "nelsonfonseca.18@gmail.com"
    },
    {
      "name": "paulobmarcos",
      "email": "paulobmarcos@outlook.com"
    },
    {
      "name": "pedromiguelss",
      "email": "pedromiguelsousasantos@hotmail.com"
    },
    {
      "name": "ricardo-silva91",
      "email": "ricardo.silva@moxy.studio"
    },
    {
      "name": "ruimonteiro",
      "email": "ruimpmonteiro12345@gmail.com"
    },
    {
      "name": "ruipneves",
      "email": "rui.neves@moxy.studio"
    },
    {
      "name": "satazor",
      "email": "andremiguelcruz@msn.com"
    },
    {
      "name": "vascosantos",
      "email": "vasco.santos@moxy.studio"
    }
  ],
  "name": "yargs-unparser",
  "optionalDependencies": {},
  "readme": "# yargs-unparser\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage Status][codecov-image]][codecov-url] [![Dependency status][david-dm-image]][david-dm-url] [![Dev Dependency status][david-dm-dev-image]][david-dm-dev-url] [![Greenkeeper badge][greenkeeper-image]][greenkeeper-url]\n\n[npm-url]:https://npmjs.org/package/yargs-unparser\n[npm-image]:http://img.shields.io/npm/v/yargs-unparser.svg\n[downloads-image]:http://img.shields.io/npm/dm/yargs-unparser.svg\n[travis-url]:https://travis-ci.org/yargs/yargs-unparser\n[travis-image]:http://img.shields.io/travis/yargs/yargs-unparser/master.svg\n[codecov-url]:https://codecov.io/gh/yargs/yargs-unparser\n[codecov-image]:https://img.shields.io/codecov/c/github/yargs/yargs-unparser/master.svg\n[david-dm-url]:https://david-dm.org/yargs/yargs-unparser\n[david-dm-image]:https://img.shields.io/david/yargs/yargs-unparser.svg\n[david-dm-dev-url]:https://david-dm.org/yargs/yargs-unparser?type=dev\n[david-dm-dev-image]:https://img.shields.io/david/dev/yargs/yargs-unparser.svg\n[greenkeeper-image]:https://badges.greenkeeper.io/yargs/yargs-unparser.svg\n[greenkeeper-url]:https://greenkeeper.io\n\nConverts back a `yargs` argv object to its original array form.\n\nProbably the unparser word doesn't even exist, but it sounds nice and goes well with [yargs-parser](https://github.com/yargs/yargs-parser).\n\nThe code originally lived in [MOXY](https://github.com/moxystudio)'s GitHub but was later moved here for discoverability.\n\n\n## Installation\n\n`$ npm install yargs-unparser`\n\n\n## Usage\n\n```js\nconst parse = require('yargs-parser');\nconst unparse = require('yargs-unparser');\n\nconst argv = parse(['--no-boolean', '--number', '4', '--string', 'foo'], {\n    boolean: ['boolean'],\n    number: ['number'],\n    string: ['string'],\n});\n// { boolean: false, number: 4, string: 'foo', _: [] }\n\nconst unparsedArgv = unparse(argv);\n// ['--no-boolean', '--number', '4', '--string', 'foo'];\n```\n\nThe second argument of `unparse` accepts an options object:\n\n- `alias`: The [aliases](https://github.com/yargs/yargs-parser#requireyargs-parserargs-opts) so that duplicate options aren't generated\n- `default`: The [default](https://github.com/yargs/yargs-parser#requireyargs-parserargs-opts) values so that the options with default values are omitted\n- `command`: The [command](https://github.com/yargs/yargs/blob/master/docs/advanced.md#commands) first argument so that command names and positional arguments are handled correctly\n\n### Example with `command` options\n\n```js\nconst yargs = require('yargs');\nconst unparse = require('yargs-unparser');\n\nconst argv = yargs\n    .command('my-command <positional>', 'My awesome command', (yargs) =>\n        yargs\n        .option('boolean', { type: 'boolean' })\n        .option('number', { type: 'number' })\n        .option('string', { type: 'string' })\n    )\n    .parse(['my-command', 'hello', '--no-boolean', '--number', '4', '--string', 'foo']);\n// { positional: 'hello', boolean: false, number: 4, string: 'foo', _: ['my-command'] }\n\nconst unparsedArgv = unparse(argv, {\n    command: 'my-command <positional>',\n});\n// ['my-command', 'hello', '--no-boolean', '--number', '4', '--string', 'foo'];\n```\n\n### Caveats\n\nThe returned array can be parsed again by `yargs-parser` using the default configuration. If you used custom configuration that you want `yargs-unparser` to be aware, please fill an [issue](https://github.com/yargs/yargs-unparser/issues).\n\nIf you `coerce` in weird ways, things might not work correctly.\n\n\n## Tests\n\n`$ npm test`   \n`$ npm test -- --watch` during development\n\n\n## License\n\n[MIT License](http://opensource.org/licenses/MIT)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/yargs/yargs-unparser.git"
  },
  "scripts": {
    "commitmsg": "commitlint -e $GIT_PARAMS",
    "lint": "eslint .",
    "precommit": "lint-staged",
    "prerelease": "npm t && npm run lint",
    "release": "standard-version",
    "test": "jest --env node --coverage"
  },
  "standard-version": {
    "scripts": {
      "posttag": "git push --follow-tags origin master"
    }
  },
  "version": "1.6.0"
}
